# load dplyr
library(dplyr)
# step 4 read in ml_data_4_percent_speed to data frame
rs_analysis_speed <- read.csv('C:/Users/Teresa/Class/Rural_Surge_extra/ml_data_4_percent_speed.csv',check.names = F, stringsAsFactors = F)
# step 5 perform linear regression using lm() for all six variables
lm(avg_speed ~ max_speed + perc_one + 	perc_two + perc_three + u_r_code,data=rs_analysis_speed)
# Step 6 use summary function to determine p-value and r-squared valued for linear regression model
summary(lm(avg_speed ~ max_speed + perc_one + 	perc_two + perc_three + u_r_code,data=rs_analysis_speed))
# read in ml_data_4.csv
rs_speed <- read.csv('C:/Users/Teresa/Class/Rural_Surge_extra/ml_data_4.csv',check.names = F, stringsAsFactors = F)
# create a total_summary dataframe using the summarize() function to get mean, median, variance, and SD of suspension coils PSI Column
total_summary <- rs_speed %>% summarize(Mean=mean(avg_speed), Median=median(avg_speed), Variance=var(avg_speed), SD=sd(avg_speed), .groups = 'keep')
# create lot_summary dataframe using group_by() and summarize() functions to group by lot
ru_summary <- rs_speed %>% group_by(u_r_code) %>% summarize(Mean=mean(avg_speed), Median=median(avg_speed), Variance=var(avg_speed), SD=sd(avg_speed), .groups = 'keep')
library(tidyverse)
# - perform t-test by ru_code
rs_speed_r <- subset(rs_speed, u_r_code=="R")
rs_speed_u <- subset(rs_speed, u_r_code=="U")
t.test(rs_speed_r$avg_speed,mu=100)
t.test(rs_speed_u$avg_speed,mu=100)
## deeper dive - create box and whisker plot by lot
ggplot(rs_speed, aes(u_r_code, avg_speed)) +
geom_boxplot()
save.image("C:/Users/Teresa/Class/Rural_Surge/Analysis/rural_surge_analysis_no_service_file.RData")
setwd("C:/Users/Teresa/Class/Rural_Surge/Analysis")
# read in ml_data_4_percent_speed to data frame
rs_analysis_speed_max <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# read in ml_data_4_percent_speed to data frame
rs_analysis_no_isp <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# perform linear regression using lm() for all six variables
lm(urban_rural ~ tot_0 + tot_1 + tot_2 + tot_3,data=rs_analysis_no_isp)
# - load dplyr
library(dplyr)
# read in ml_data_4_percent_speed to data frame
rs_analysis_no_isp <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# perform linear regression using lm() for all six variables
lm(ur_val ~ tot_0 + tot_1 + tot_2 + tot_3,data=rs_analysis_no_isp)
# use summary function to determine p-value and r-squared valued for linear regression model
summary(lm(ur_val ~ tot_0 + tot_1 + tot_2 + tot_3,data=rs_analysis_no_isp))
# - create a total_summary dataframe using the summarize() function to get mean, median, variance, and SD of rs_speed_max max_speed Column
summary_no_isp <- rs_no_isp %>% summarize(Mean=mean(tot_0), Median=median(tot_0), Variance=var(tot_0), SD=sd(tot_0), .groups = 'keep')
## - read in ml_data_4.csv
rs_no_isp <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# - create a total_summary dataframe using the summarize() function to get mean, median, variance, and SD of rs_speed_max max_speed Column
summary <- rs_no_isp %>% summarize(Mean=mean(tot_0), Median=median(tot_0), Variance=var(tot_0), SD=sd(tot_0), .groups = 'keep')
# create UR_summary dataframe using group_by() and summarize() functions to group by ur_code
ru_summary_no_isp <- rs_no_isp %>% group_by(urban_rural) %>% summarize(Mean=mean(tot_0), Median=median(tot_0), Variance=var(tot_0), SD=sd(tot_0), .groups = 'keep')
## - perform a t-test.Mean set at 100 MB - reference USDA definition of sufficient broadband
t.test(rs_no_isp$tot_0)
# perform t-test by ur_code
rs_no_isp_r <- subset(rs_no_isp, urban_rural=="R")
rs_no_isp_u <- subset(rs_no_isp, urban_rural=="U")
t.test(rs_no_isp_r$tot_0)
t.test(rs_no_isp_u$tot_0)
## deeper dive - create box and whisker plot by ur_code and max speed
## sample code: p <- ggplot(df, aes(carat, price)) +geom_point() +
## labs(title = "Diamonds", x = "x-axis -> Carat", y = "y-axis -> Price")
ggplot(rs_no_isp, aes(urban_rural, tot_0)) +
geom_boxplot() + labs(title = "Population with No ISP by Rural-Urban Classification", x="Rural-Urban",y="Population")
## - perform a t-test.Mean set at 100 MB - reference USDA definition of sufficient broadband
t.test(rs_no_isp$tot_0)
## deeper dive - create box and whisker plot by ur_code and max speed
## sample code: p <- ggplot(df, aes(carat, price)) +geom_point() +
## labs(title = "Diamonds", x = "x-axis -> Carat", y = "y-axis -> Price")
ggplot(rs_no_isp, aes(urban_rural, tot_0)) +
geom_boxplot() + labs(title = "Population with No ISP by Rural-Urban Classification", x="Rural-Urban",y="Population")
library(tidyverse)
## deeper dive - create box and whisker plot by ur_code and max speed
## sample code: p <- ggplot(df, aes(carat, price)) +geom_point() +
## labs(title = "Diamonds", x = "x-axis -> Carat", y = "y-axis -> Price")
ggplot(rs_no_isp, aes(urban_rural, tot_0)) +
geom_boxplot() + labs(title = "Population with No ISP by Rural-Urban Classification", x="Rural-Urban",y="Population")
# - load dplyr
library(dplyr)
# perform linear regression using lm() for all six variables
lm(ur_val ~ avg_0 + avg_1 + avg_2 + avg_3,data=rs_analysis_no_isp)
# read in ml_data_4_percent_speed to data frame
rs_analysis_no_isp <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# perform linear regression using lm() for all six variables
lm(ur_val ~ avg_0 + avg_1 + avg_2 + avg_3,data=rs_analysis_no_isp)
# read in ml_data_4_percent_speed to data frame
rs_analysis_no_isp <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# use summary function to determine p-value and r-squared valued for linear regression model
summary(lm(ur_val ~ avg_0 + avg_1 + avg_2 + avg_3,data=rs_analysis_no_isp))
# use summary function to determine p-value and r-squared valued for linear regression model
summary(lm(ur_val ~ avg_0 + avg_1 + avg_2 + avg_3,data=rs_analysis_no_isp))
# perform linear regression using lm() for all six variables
lm(ur_val ~ avg_0 + avg_1 + avg_2 + avg_3,data=rs_analysis_no_isp)
# use summary function to determine p-value and r-squared valued for linear regression model
summary(lm(ur_val ~ avg_0 + avg_1 + avg_2 + avg_3,data=rs_analysis_no_isp))
## - read in ml_data_has_zero.csv
rs_no_isp <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
# - create a total_summary dataframe using the summarize() function to get mean, median, variance, and SD of rs_speed_max max_speed Column
summary <- rs_no_isp %>% summarize(Mean=mean(avg_0), Median=median(avg_0), Variance=var(avg_0), SD=sd(avg_0), .groups = 'keep')
# create UR_summary dataframe using group_by() and summarize() functions to group by ur_code
ru_summary_no_isp <- rs_no_isp %>% group_by(urban_rural) %>% summarize(Mean=mean(avg_0), Median=median(avg_0), Variance=var(avg_0), SD=sd(avg_0), .groups = 'keep')
library(tidyverse)
## - perform a t-test.Mean set at 100 MB - reference USDA definition of sufficient broadband
t.test(rs_no_isp$tot_0)
# perform t-test by ur_code
rs_no_isp_r <- subset(rs_no_isp, urban_rural=="R")
## - perform a t-test.Mean set at 100 MB - reference USDA definition of sufficient broadband
t.test(rs_no_isp$avg_0)
# perform t-test by ur_code
rs_no_isp_r <- subset(rs_no_isp, urban_rural=="R")
rs_no_isp_u <- subset(rs_no_isp, urban_rural=="U")
t.test(rs_no_isp_r$avg_0)
t.test(rs_no_isp_u$avg_0)
## deeper dive - create box and whisker plot by ur_code and max speed
## sample code: p <- ggplot(df, aes(carat, price)) +geom_point() +
## labs(title = "Diamonds", x = "x-axis -> Carat", y = "y-axis -> Price")
ggplot(rs_no_isp, aes(urban_rural, avg_0)) +
geom_boxplot() + labs(title = "Population with No ISP by Rural-Urban Classification", x="Rural-Urban",y="Population")
# load dplyr
library(dplyr)
# read in ml_data_4_percent_speed to data frame
rs_analysis_speed <- read.csv('C:/Users/Teresa/Class/Rural_Surge/Resources/Data/ml_data_has_zero.csv',check.names = F, stringsAsFactors = F)
